<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20252.25.1003.1601                               -->
<workbook original-version='18.1' source-build='2025.2.4 (20252.25.1003.1601)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <AccessibleZoneTabOrder />
    <AnimationOnByDefault />
    <AutoCreateAndUpdateDSDPhoneLayouts />
    <IntuitiveSorting />
    <IntuitiveSorting_SP2 />
    <MarkAnimation />
    <ObjectModelEncapsulateLegacy />
    <ObjectModelExtractV2 />
    <ObjectModelTableType />
    <SchemaViewerObjectModel />
    <SetMembershipControl />
    <SheetIdentifierTracking />
    <_.fcp.VConnDownstreamExtractsWithWarnings.true...VConnDownstreamExtractsWithWarnings />
    <WindowsPersistSimpleIdentifiers />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource caption='daikibo-telemetry-data' inline='true' name='federated.1b7rwqp14ldag010ruqz107cfmee' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='daikibo-telemetry-data' name='semistructpassivestore-direct.1gb73200foetv31ginyeb0m0ihzu'>
            <connection class='semistructpassivestore-direct' directory='C:/Users/mitha/Downloads/daikibo-telemetry-data.json' filename='daikibo-telemetry-data.json' password='' server=''>
              <semistruct-schemas>
                <semistruct-schema table='[daikibo-telemetry-data.json]'>
                  <map key='data' value='true' />
                  <map key='location' value='true' />
                  <map key='{root}' value='true' />
                </semistruct-schema>
              </semistruct-schemas>
            </connection>
          </named-connection>
        </named-connections>
        <relation connection='semistructpassivestore-direct.1gb73200foetv31ginyeb0m0ihzu' name='daikibo-telemetry-data.json' table='[daikibo-telemetry-data.json]' type='table' />
        <cols>
          <map key='[Document Index (generated)]' value='[daikibo-telemetry-data.json].[Document Index (generated)]' />
          <map key='[area]' value='[daikibo-telemetry-data.json].[location.area]' />
          <map key='[city]' value='[daikibo-telemetry-data.json].[location.city]' />
          <map key='[country]' value='[daikibo-telemetry-data.json].[location.country]' />
          <map key='[deviceID]' value='[daikibo-telemetry-data.json].[deviceID]' />
          <map key='[deviceType]' value='[daikibo-telemetry-data.json].[deviceType]' />
          <map key='[factory]' value='[daikibo-telemetry-data.json].[location.factory]' />
          <map key='[section]' value='[daikibo-telemetry-data.json].[location.section]' />
          <map key='[status]' value='[daikibo-telemetry-data.json].[data.status]' />
          <map key='[temperature]' value='[daikibo-telemetry-data.json].[data.temperature]' />
          <map key='[timestamp]' value='[daikibo-telemetry-data.json].[timestamp]' />
        </cols>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>Document Index (generated)</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Document Index (generated)]</local-name>
            <parent-name>[daikibo-telemetry-data.json]</parent-name>
            <remote-alias>Document Index (generated)</remote-alias>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[daikibo-telemetry-data.json_C20A4EC138DB482E92B0601FE6C2FFB2]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>data.status</remote-name>
            <remote-type>130</remote-type>
            <local-name>[status]</local-name>
            <parent-name>[daikibo-telemetry-data.json]</parent-name>
            <remote-alias>data.status</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <object-id>[daikibo-telemetry-data.json_C20A4EC138DB482E92B0601FE6C2FFB2]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>data.temperature</remote-name>
            <remote-type>5</remote-type>
            <local-name>[temperature]</local-name>
            <parent-name>[daikibo-telemetry-data.json]</parent-name>
            <remote-alias>data.temperature</remote-alias>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[daikibo-telemetry-data.json_C20A4EC138DB482E92B0601FE6C2FFB2]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>deviceID</remote-name>
            <remote-type>130</remote-type>
            <local-name>[deviceID]</local-name>
            <parent-name>[daikibo-telemetry-data.json]</parent-name>
            <remote-alias>deviceID</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <object-id>[daikibo-telemetry-data.json_C20A4EC138DB482E92B0601FE6C2FFB2]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>deviceType</remote-name>
            <remote-type>130</remote-type>
            <local-name>[deviceType]</local-name>
            <parent-name>[daikibo-telemetry-data.json]</parent-name>
            <remote-alias>deviceType</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <object-id>[daikibo-telemetry-data.json_C20A4EC138DB482E92B0601FE6C2FFB2]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>location.area</remote-name>
            <remote-type>130</remote-type>
            <local-name>[area]</local-name>
            <parent-name>[daikibo-telemetry-data.json]</parent-name>
            <remote-alias>location.area</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <object-id>[daikibo-telemetry-data.json_C20A4EC138DB482E92B0601FE6C2FFB2]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>location.city</remote-name>
            <remote-type>130</remote-type>
            <local-name>[city]</local-name>
            <parent-name>[daikibo-telemetry-data.json]</parent-name>
            <remote-alias>location.city</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <object-id>[daikibo-telemetry-data.json_C20A4EC138DB482E92B0601FE6C2FFB2]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>location.country</remote-name>
            <remote-type>130</remote-type>
            <local-name>[country]</local-name>
            <parent-name>[daikibo-telemetry-data.json]</parent-name>
            <remote-alias>location.country</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <object-id>[daikibo-telemetry-data.json_C20A4EC138DB482E92B0601FE6C2FFB2]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>location.factory</remote-name>
            <remote-type>130</remote-type>
            <local-name>[factory]</local-name>
            <parent-name>[daikibo-telemetry-data.json]</parent-name>
            <remote-alias>location.factory</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <object-id>[daikibo-telemetry-data.json_C20A4EC138DB482E92B0601FE6C2FFB2]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>location.section</remote-name>
            <remote-type>130</remote-type>
            <local-name>[section]</local-name>
            <parent-name>[daikibo-telemetry-data.json]</parent-name>
            <remote-alias>location.section</remote-alias>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <object-id>[daikibo-telemetry-data.json_C20A4EC138DB482E92B0601FE6C2FFB2]</object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>timestamp</remote-name>
            <remote-type>5</remote-type>
            <local-name>[timestamp]</local-name>
            <parent-name>[daikibo-telemetry-data.json]</parent-name>
            <remote-alias>timestamp</remote-alias>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <object-id>[daikibo-telemetry-data.json_C20A4EC138DB482E92B0601FE6C2FFB2]</object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Unhealthy' datatype='integer' name='[Calculation_873979802779516928]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='IF [status] = &quot;unhealthy&quot; THEN 10 ELSE 0 END' />
      </column>
      <column aggregation='Sum' datatype='integer' name='[Document Index (generated)]' role='dimension' type='ordinal'>
        <desc>
          <formatted-text>
            <run>Document Index (generated)</run>
          </formatted-text>
        </desc>
      </column>
      <column caption='daikibo-telemetry-data.json' datatype='table' name='[__tableau_internal_object_id__].[daikibo-telemetry-data.json_C20A4EC138DB482E92B0601FE6C2FFB2]' role='measure' type='quantitative' />
      <column caption='Area' datatype='string' name='[area]' role='dimension' type='nominal'>
        <desc>
          <formatted-text>
            <run>location.area</run>
          </formatted-text>
        </desc>
      </column>
      <column caption='City' datatype='string' name='[city]' role='dimension' semantic-role='[City].[Name]' type='nominal'>
        <desc>
          <formatted-text>
            <run>location.city</run>
          </formatted-text>
        </desc>
      </column>
      <column caption='Country' datatype='string' name='[country]' role='dimension' semantic-role='[Country].[ISO3166_2]' type='nominal'>
        <desc>
          <formatted-text>
            <run>location.country</run>
          </formatted-text>
        </desc>
      </column>
      <column caption='Device ID' datatype='string' name='[deviceID]' role='dimension' type='nominal'>
        <desc>
          <formatted-text>
            <run>deviceID</run>
          </formatted-text>
        </desc>
      </column>
      <column caption='Device Type' datatype='string' name='[deviceType]' role='dimension' type='nominal'>
        <desc>
          <formatted-text>
            <run>deviceType</run>
          </formatted-text>
        </desc>
      </column>
      <column caption='Factory' datatype='string' name='[factory]' role='dimension' type='nominal'>
        <desc>
          <formatted-text>
            <run>location.factory</run>
          </formatted-text>
        </desc>
      </column>
      <column caption='Section' datatype='string' name='[section]' role='dimension' type='nominal'>
        <desc>
          <formatted-text>
            <run>location.section</run>
          </formatted-text>
        </desc>
      </column>
      <column caption='Status' datatype='string' name='[status]' role='dimension' type='nominal'>
        <desc>
          <formatted-text>
            <run>data.status</run>
          </formatted-text>
        </desc>
      </column>
      <column caption='Temperature' datatype='real' name='[temperature]' role='measure' type='quantitative'>
        <desc>
          <formatted-text>
            <run>data.temperature</run>
          </formatted-text>
        </desc>
      </column>
      <column caption='Timestamp' datatype='real' name='[timestamp]' role='measure' type='quantitative'>
        <desc>
          <formatted-text>
            <run>timestamp</run>
          </formatted-text>
        </desc>
      </column>
      <group caption='Action (Factory)' hidden='true' name='[Action (Factory)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[factory]' />
        </groupfilter>
      </group>
      <folders-common>
        <folder name='Daikibo-Telemetry-Data'>
          <folder-item name='[Calculation_873979802779516928]' type='field' />
          <folder-item name='[Document Index (generated)]' type='field' />
          <folder-item name='[deviceID]' type='field' />
          <folder-item name='[deviceType]' type='field' />
        </folder>
        <folder name='Data'>
          <folder-item name='[status]' type='field' />
        </folder>
        <folder name='Location'>
          <folder-item name='[area]' type='field' />
          <folder-item name='[city]' type='field' />
          <folder-item name='[country]' type='field' />
          <folder-item name='[factory]' type='field' />
          <folder-item name='[section]' type='field' />
        </folder>
      </folders-common>
      <extract _.fcp.VConnDownstreamExtractsWithWarnings.true...user-specific='false' count='-1' enabled='true' object-id='' units='records'>
        <connection access_mode='readonly' author-locale='en_US' class='hyper' dbname='C:/Users/mitha/AppData/Local/Temp/TableauTemp/#TableauTemp_11r4i3q0fylfqn1auv0hc16v0yto.hyper' default-settings='hyper' schema='Extract' sslmode='' tablename='Extract' update-time='10/28/2025 05:47:40 AM' username='tableau_internal_user'>
          <relation name='Extract' table='[Extract].[Extract]' type='table' />
          <cols>
            <map key='[Document Index (generated)]' value='[Extract].[Document Index (generated)]' />
            <map key='[area]' value='[Extract].[location.area]' />
            <map key='[city]' value='[Extract].[location.city]' />
            <map key='[country]' value='[Extract].[location.country]' />
            <map key='[deviceID]' value='[Extract].[deviceID]' />
            <map key='[deviceType]' value='[Extract].[deviceType]' />
            <map key='[factory]' value='[Extract].[location.factory]' />
            <map key='[section]' value='[Extract].[location.section]' />
            <map key='[status]' value='[Extract].[data.status]' />
            <map key='[temperature]' value='[Extract].[data.temperature]' />
            <map key='[timestamp]' value='[Extract].[timestamp]' />
          </cols>
          <metadata-records>
            <metadata-record class='column'>
              <remote-name>Document Index (generated)</remote-name>
              <remote-type>20</remote-type>
              <local-name>[Document Index (generated)]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>Document Index (generated)</remote-alias>
              <ordinal>0</ordinal>
              <family>daikibo-telemetry-data.json</family>
              <local-type>integer</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>160704</approx-count>
              <contains-null>true</contains-null>
              <object-id>[daikibo-telemetry-data.json_C20A4EC138DB482E92B0601FE6C2FFB2]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>data.status</remote-name>
              <remote-type>129</remote-type>
              <local-name>[status]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>data.status</remote-alias>
              <ordinal>1</ordinal>
              <family>daikibo-telemetry-data.json</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>1</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='binary' />
              <object-id>[daikibo-telemetry-data.json_C20A4EC138DB482E92B0601FE6C2FFB2]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>data.temperature</remote-name>
              <remote-type>5</remote-type>
              <local-name>[temperature]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>data.temperature</remote-alias>
              <ordinal>2</ordinal>
              <family>daikibo-telemetry-data.json</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>5</approx-count>
              <contains-null>true</contains-null>
              <object-id>[daikibo-telemetry-data.json_C20A4EC138DB482E92B0601FE6C2FFB2]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>deviceID</remote-name>
              <remote-type>129</remote-type>
              <local-name>[deviceID]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>deviceID</remote-alias>
              <ordinal>3</ordinal>
              <family>daikibo-telemetry-data.json</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>36</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='binary' />
              <object-id>[daikibo-telemetry-data.json_C20A4EC138DB482E92B0601FE6C2FFB2]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>deviceType</remote-name>
              <remote-type>129</remote-type>
              <local-name>[deviceType]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>deviceType</remote-alias>
              <ordinal>4</ordinal>
              <family>daikibo-telemetry-data.json</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>9</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='binary' />
              <object-id>[daikibo-telemetry-data.json_C20A4EC138DB482E92B0601FE6C2FFB2]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>location.area</remote-name>
              <remote-type>129</remote-type>
              <local-name>[area]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>location.area</remote-alias>
              <ordinal>5</ordinal>
              <family>daikibo-telemetry-data.json</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>4</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='binary' />
              <object-id>[daikibo-telemetry-data.json_C20A4EC138DB482E92B0601FE6C2FFB2]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>location.city</remote-name>
              <remote-type>129</remote-type>
              <local-name>[city]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>location.city</remote-alias>
              <ordinal>6</ordinal>
              <family>daikibo-telemetry-data.json</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>4</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='binary' />
              <object-id>[daikibo-telemetry-data.json_C20A4EC138DB482E92B0601FE6C2FFB2]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>location.country</remote-name>
              <remote-type>129</remote-type>
              <local-name>[country]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>location.country</remote-alias>
              <ordinal>7</ordinal>
              <family>daikibo-telemetry-data.json</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>3</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='binary' />
              <object-id>[daikibo-telemetry-data.json_C20A4EC138DB482E92B0601FE6C2FFB2]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>location.factory</remote-name>
              <remote-type>129</remote-type>
              <local-name>[factory]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>location.factory</remote-alias>
              <ordinal>8</ordinal>
              <family>daikibo-telemetry-data.json</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>4</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='binary' />
              <object-id>[daikibo-telemetry-data.json_C20A4EC138DB482E92B0601FE6C2FFB2]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>location.section</remote-name>
              <remote-type>129</remote-type>
              <local-name>[section]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>location.section</remote-alias>
              <ordinal>9</ordinal>
              <family>daikibo-telemetry-data.json</family>
              <local-type>string</local-type>
              <aggregation>Count</aggregation>
              <approx-count>4</approx-count>
              <contains-null>true</contains-null>
              <collation flag='0' name='binary' />
              <object-id>[daikibo-telemetry-data.json_C20A4EC138DB482E92B0601FE6C2FFB2]</object-id>
            </metadata-record>
            <metadata-record class='column'>
              <remote-name>timestamp</remote-name>
              <remote-type>5</remote-type>
              <local-name>[timestamp]</local-name>
              <parent-name>[Extract]</parent-name>
              <remote-alias>timestamp</remote-alias>
              <ordinal>10</ordinal>
              <family>daikibo-telemetry-data.json</family>
              <local-type>real</local-type>
              <aggregation>Sum</aggregation>
              <approx-count>6817</approx-count>
              <contains-null>true</contains-null>
              <object-id>[daikibo-telemetry-data.json_C20A4EC138DB482E92B0601FE6C2FFB2]</object-id>
            </metadata-record>
          </metadata-records>
        </connection>
      </extract>
      <layout dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='false' />
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;India&quot;' />
      </semantic-values>
      <field-sort-info field-sort-order-type='custom-order'>
        <field-sort-custom-order field='Document Index (generated)' />
        <field-sort-custom-order field='Calculation_873979802779516928' />
        <field-sort-custom-order field='status' />
        <field-sort-custom-order field='temperature' />
        <field-sort-custom-order field='deviceID' />
        <field-sort-custom-order field='deviceType' />
        <field-sort-custom-order field='area' />
        <field-sort-custom-order field='city' />
        <field-sort-custom-order field='country' />
        <field-sort-custom-order field='factory' />
        <field-sort-custom-order field='section' />
        <field-sort-custom-order field='timestamp' />
        <field-sort-custom-order field='Geometry (generated)' />
        <field-sort-custom-order field='Latitude (generated)' />
        <field-sort-custom-order field='Longitude (generated)' />
        <field-sort-custom-order field=':Measure Names' />
        <field-sort-custom-order field='Multiple Values' />
      </field-sort-info>
      <object-graph>
        <objects>
          <object caption='daikibo-telemetry-data.json' id='daikibo-telemetry-data.json_C20A4EC138DB482E92B0601FE6C2FFB2'>
            <properties context=''>
              <relation connection='semistructpassivestore-direct.1gb73200foetv31ginyeb0m0ihzu' name='daikibo-telemetry-data.json' table='[daikibo-telemetry-data.json]' type='table' />
            </properties>
            <properties context='extract'>
              <relation name='Extract' table='[Extract].[Extract]' type='table' />
            </properties>
          </object>
        </objects>
      </object-graph>
    </datasource>
  </datasources>
  <actions>
    <action caption='Filter 1 (generated)' name='[Action1_5D0FDC0DC47940ED8CBA5B2D0C4375A7]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Dashboard 1' type='sheet' worksheet='Down Time per Factory' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Dashboard 1' />
      </command>
    </action>
  </actions>
  <worksheets>
    <worksheet name='Down Time per Device Type'>
      <table>
        <view>
          <datasources>
            <datasource caption='daikibo-telemetry-data' name='federated.1b7rwqp14ldag010ruqz107cfmee' />
          </datasources>
          <datasource-dependencies datasource='federated.1b7rwqp14ldag010ruqz107cfmee'>
            <column caption='Unhealthy' datatype='integer' name='[Calculation_873979802779516928]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [status] = &quot;unhealthy&quot; THEN 10 ELSE 0 END' />
            </column>
            <column caption='Device Type' datatype='string' name='[deviceType]' role='dimension' type='nominal'>
              <desc>
                <formatted-text>
                  <run>deviceType</run>
                </formatted-text>
              </desc>
            </column>
            <column caption='Factory' datatype='string' name='[factory]' role='dimension' type='nominal'>
              <desc>
                <formatted-text>
                  <run>location.factory</run>
                </formatted-text>
              </desc>
            </column>
            <column-instance column='[deviceType]' derivation='None' name='[none:deviceType:nk]' pivot='key' type='nominal' />
            <column caption='Status' datatype='string' name='[status]' role='dimension' type='nominal'>
              <desc>
                <formatted-text>
                  <run>data.status</run>
                </formatted-text>
              </desc>
            </column>
            <column-instance column='[Calculation_873979802779516928]' derivation='Sum' name='[sum:Calculation_873979802779516928:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1b7rwqp14ldag010ruqz107cfmee].[Action (Factory)]'>
            <groupfilter function='member' level='[factory]' member='&quot;daikibo-factory-seiko&quot;' user:ui-action-filter='[Action1_5D0FDC0DC47940ED8CBA5B2D0C4375A7]' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.1b7rwqp14ldag010ruqz107cfmee].[Action (Factory)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='on' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows>[federated.1b7rwqp14ldag010ruqz107cfmee].[sum:Calculation_873979802779516928:qk]</rows>
        <cols>[federated.1b7rwqp14ldag010ruqz107cfmee].[none:deviceType:nk]</cols>
      </table>
      <simple-id uuid='{2B3DC089-33C1-4219-8FAA-F8EB5608E4AB}' />
    </worksheet>
    <worksheet name='Down Time per Factory'>
      <table>
        <view>
          <datasources>
            <datasource caption='daikibo-telemetry-data' name='federated.1b7rwqp14ldag010ruqz107cfmee' />
          </datasources>
          <datasource-dependencies datasource='federated.1b7rwqp14ldag010ruqz107cfmee'>
            <column caption='Unhealthy' datatype='integer' name='[Calculation_873979802779516928]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='IF [status] = &quot;unhealthy&quot; THEN 10 ELSE 0 END' />
            </column>
            <column caption='Factory' datatype='string' name='[factory]' role='dimension' type='nominal'>
              <desc>
                <formatted-text>
                  <run>location.factory</run>
                </formatted-text>
              </desc>
            </column>
            <column-instance column='[factory]' derivation='None' name='[none:factory:nk]' pivot='key' type='nominal' />
            <column caption='Status' datatype='string' name='[status]' role='dimension' type='nominal'>
              <desc>
                <formatted-text>
                  <run>data.status</run>
                </formatted-text>
              </desc>
            </column>
            <column-instance column='[Calculation_873979802779516928]' derivation='Sum' name='[sum:Calculation_873979802779516928:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.1b7rwqp14ldag010ruqz107cfmee].[none:factory:nk]'>
            <groupfilter function='level-members' level='[none:factory:nk]' />
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.1b7rwqp14ldag010ruqz107cfmee].[none:factory:nk]' direction='ASC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.1b7rwqp14ldag010ruqz107cfmee].[sum:Calculation_873979802779516928:qk]' shelf='columns' />
          </shelf-sorts>
          <slices>
            <column>[federated.1b7rwqp14ldag010ruqz107cfmee].[none:factory:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.1b7rwqp14ldag010ruqz107cfmee].[sum:Calculation_873979802779516928:qk]' field-type='quantitative' max='288' min='-83' range-type='fixed' scope='rows' type='space' />
            <format attr='height' field='[federated.1b7rwqp14ldag010ruqz107cfmee].[none:factory:nk]' value='145' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows>[federated.1b7rwqp14ldag010ruqz107cfmee].[sum:Calculation_873979802779516928:qk]</rows>
        <cols>[federated.1b7rwqp14ldag010ruqz107cfmee].[none:factory:nk]</cols>
      </table>
      <simple-id uuid='{37D39102-F3E4-415A-87EA-ED9B66F4796E}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard enable-sort-zone-taborder='true' name='Dashboard 1'>
      <style />
      <size sizing-mode='automatic' />
      <zones>
        <zone h='100000' id='4' type-v2='layout-basic' w='100000' x='0' y='0'>
          <zone h='97978' id='8' param='horz' type-v2='layout-flow' w='98470' x='765' y='1011'>
            <zone h='97978' id='6' type-v2='layout-basic' w='98470' x='765' y='1011'>
              <zone h='48989' id='3' name='Down Time per Factory' w='98470' x='765' y='1011'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='48989' id='5' name='Down Time per Device Type' w='98470' x='765' y='50000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
          </zone>
          <zone-style>
            <format attr='border-color' value='#000000' />
            <format attr='border-style' value='none' />
            <format attr='border-width' value='0' />
            <format attr='margin' value='8' />
          </zone-style>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='700' minheight='700' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='10' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='97978' id='9' param='vert' type-v2='layout-flow' w='98470' x='765' y='1011'>
                <zone fixed-size='280' h='48989' id='3' is-fixed='true' name='Down Time per Factory' w='98470' x='765' y='1011'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='48989' id='5' is-fixed='true' name='Down Time per Device Type' w='98470' x='765' y='50000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{306D228F-2EE5-4E40-B341-2475AC372FBC}' />
    </dashboard>
  </dashboards>
  <windows saved-dpi-scale-factor='1.25' source-height='37'>
    <window class='worksheet' name='Down Time per Factory'>
      <cards>
        <edge name='left'>
          <strip size='100'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1b7rwqp14ldag010ruqz107cfmee].[none:factory:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{96774A4A-4A27-4D8A-91D9-7B0AAA5DB2BD}' />
    </window>
    <window class='worksheet' name='Down Time per Device Type'>
      <cards>
        <edge name='left'>
          <strip size='100'>
            <card type='pages' />
            <card type='filters' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.1b7rwqp14ldag010ruqz107cfmee].[none:deviceType:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{A2ED046C-5898-4730-A5F6-2041FB3D5A2C}' />
    </window>
    <window class='dashboard' maximized='true' name='Dashboard 1'>
      <viewpoints>
        <viewpoint name='Down Time per Device Type'>
          <zoom type='fit-height' />
        </viewpoint>
        <viewpoint name='Down Time per Factory'>
          <zoom type='fit-height' />
          <selection-collection>
            <tuple-selection>
              <tuple-reference>
                <tuple-descriptor>
                  <pane-descriptor>
                    <x-fields>
                      <field>[federated.1b7rwqp14ldag010ruqz107cfmee].[none:factory:nk]</field>
                    </x-fields>
                    <y-fields>
                      <field>[federated.1b7rwqp14ldag010ruqz107cfmee].[sum:Calculation_873979802779516928:qk]</field>
                    </y-fields>
                  </pane-descriptor>
                  <columns>
                    <field>[federated.1b7rwqp14ldag010ruqz107cfmee].[none:factory:nk]</field>
                    <field>[federated.1b7rwqp14ldag010ruqz107cfmee].[sum:Calculation_873979802779516928:qk]</field>
                  </columns>
                </tuple-descriptor>
                <tuple>
                  <value>&quot;daikibo-factory-seiko&quot;</value>
                  <value>480</value>
                </tuple>
              </tuple-reference>
            </tuple-selection>
          </selection-collection>
        </viewpoint>
      </viewpoints>
      <active id='3' />
      <simple-id uuid='{E5560D00-003B-40E6-94C3-4649A9DA05A2}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Dashboard 1' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAABJ0AAASdAHeZh94
      AAAar0lEQVR4nO3dWXMc15nm8X9m1l4FFPYdIAkS3ASSaomiNtuy3ZYstd3T7faMZ/obOOZy
      5toR+gQTczURM3cT0dHd4+5oW25L1mLtCyWSokBi4QIQJIgdKKD2NTPPmQuQECEBNkEABYL5
      /m6qUMjlVFU+uZ23Mg2ttUYIjzJ3uwFC7CYJgPA0CYDwNAmA8DQJgPA0371/ZJYXGJuYpr1z
      H23N9RiG8UATvTl6hWS2CEBLRw8+bdPa3s6DTe1PW16Y5tbUPKYVpP/UY2vf0D20UmCYPOBb
      Eo+oNVuAq19+REaFGb/yJW9/dB7Q2JUypVIZrTWuqwCN47gAuK6LUgrHsSmWStw9oRoIhpi4
      col0xcDv9wEGaI3rOhSLRVzlUiwWUVqjtaZYLOC4arUdrutSKhZXX3Mdm2KxhNYapRRKuXfa
      Ahc+/BgdiRAOhzC0xq5UKJcraA1aayqVCq7rcvb9d1guVlBKo1yHQuHO/JW68x6c1WkqpZCz
      w96wdoVpGPT2HaWn9givvfY7colJXv/oEs0xk7qu48zcGOavXv4h//N//C/+63//b3zw9tu0
      x2A84ydYSnDk+Vfoa4/T2XOAnq7rNB7qo7Uxxh/efJNXmp7lf/+ff+bEsR4GbyxyoreJSrSH
      OneBohVjdnqGn/3sb/CZBv/6T/+XnoPHGB2f5O9//mN+8+/v0tVag1XXy9KtAUoVh/6nXuDw
      vjYM08e+AweoNQxwi3z2yTnKhQRtR56nMDNIzvXT0trB8NAlFioGz555is/ee4fWjnZSRYNj
      TRbvj9zm4IFeEtNT/N3Pf8Y7b77BD378EwLWLn0romrW32O4s/IbGxniOy/+hI6owxtvfUBj
      xOTKtWucee4MQ4PDBGNNYCZ57rsvYM5f5nauCMS/NTmlVtas+/se47vf6SfrDvPd7x7njQ+v
      cG16nK7ew9i5HFnboT7oJ9bQxrPPPos/n+HqtUFyOohDkOTsbeyKw0/+9hcEfSv7Mtot8Nbv
      f080WMuPf3CaYqWMbZeYnZ3Dybn85CcvAZCZ6af/+y8RyN6mrvMozz13kjdefx2la+l/8juc
      OdLJwKcpxm5PoQNxApbsK3nBNw6CNQtz05z77AOijZ109vQwMjjIzM1RInUtPPbYYX7/9jme
      fuYMlz76A/uPHNtyA1pamtnfd4ynnj5NxFpZ5ZaLOVKpZcYSGXp7DhALBTl14jhHjxwmEImt
      LvwAhhXlr3/+c/72py+yMD5CvPsYvfs6MDDxqRJT84vMLyQIB0zm5xYwgnGW5ydIJxOUXQMD
      i5qaCAAnTj/DG7/+B46efHzL70vsEfoe2VRCDw0N6am5xZUXlNITY1f0xUsj2lVaK9fR0zNz
      WmutZ6entaO0zmdSuuwoXSnmdK5YWZ1WLp3SJdvRWmudTCa1VrZOpjJau/c+ZrVrl/Xw4CU9
      fntGK7Uy7r/++h/1wMCATmWLWmutF2cn9cClyzpfslemdY/U0pJ27jxXrqMvXzyvJ6amdTqT
      145d0kOXL+m5xaR27JIeuPilTudKOpWY1Z9/cU7nihVdymV1oWxrrbV2HVu/9pvXtKu08AhD
      64fvaG98fJze3t6qz/fGlcsEGrrpbq2v+rzF7ngoAyBEtUhHmPA0CYDwtD0XgFIuzfDwCJlC
      ec3rrlPZpRaJvWyjyoGH1szVC0zbrbRkErz36Qh9/ScZHRnGKMzTcfwZ5ifGiLfvw16aIVuB
      xx4/SS5bpndf+243XTyE9twWACCVWmZxfhGMEh+++QeaDv0FRw/20BXXOJFOpm5eYyaR4+kn
      DvNv//hP+GvqdrvJ4iG157YAjT2HefF4O0Z2lnSxxAsvPcXkzWHaDh9iKlOhlmW6jz9O2DIJ
      ROqpb22nqyG8280WD6kdOQ2qlMI0d2fjUqrYJDN5AOxSnoJjEo+tHwDLNGlpqF39+1e/+hXJ
      ZPK+5/XLX/6S/v7+rTVY7Kod2QLsZteCbbskM4U7fxmAvufvtXw+a00A3j47QuTAM/c1n+zi
      FK9MTEgA9rg/GQDXdVlcXKStra1a7dlV/lCU2ubu+xpWyVmnR8KG+ymu6zI1NcXlwcvVbI8Q
      VbXuFsBxHAaHBpmanCIYCla7TUJUzboBsCyLvkN99B3qe+CfRQqxF6wbAMMwiMVi1W6LEFW3
      4TGA1pq3P/gM23aq2R4hqmrdLUC5XOFffvc2Q1dHaWlq4PH+o/f8V1MqFDD9QQzt4mqDgM+k
      UKoQi0aq1Gwhtse6AdBoQqEgP/7B899Y+EG5imQ6TTKVwULjaoNQ0EIrhdNxgLpooCoNF2I7
      bHgQ/POf/gi1ToeWYRqUCjla2lrJJrMEcMkCPc0xMqUSbsja1cuKuMq9/4G1xnG+3sXbbIuV
      Uriui2XJ5SP2qnUD4Pf5sIsZ5jM2nS2Nay4m5dpFsvkywZiLz3IoKoumsJ/JhRT7ew9iWSuH
      Fbu1UFjmJo5ZDAOf7+uPYLPnu0zTlIV/j9uwJ9jyB7l64R1+O5nipZdf4fD+jpURAlFOnjxx
      Z6im1eGbvNFZLB4xGwbALmYxoq38l//8I3DsarZJiKrZ8DRoITXHQirPxOQ0Tc1NGw0mxJ62
      7hZAuRW+vDyG5Sgy2Xy12yRE1awbANPyc7CnBX8pTn5putptEqJq1u8H0IpkOk+h7NC9r/oX
      qBKiWtY/BtAaM1TD0tQNroyOV7lJQlTPugEwTB/djSGyZpxYSKpBxaNrw9OgdZ2HefnZKAvZ
      tdff0crlyuAFWg89SXLqOiXXoj7mJ5kpcKDvKNHg9vzKcvT2/H33Jne3NRAOSgmG2LwNl9bk
      9ChfDSwQaPrGPTRMi/aWZmzlYPlj1Pldco7mQFcruVyRkC+yLaUQjuPed2mC67qrJQ1SCiE2
      Y8MANHQfJTI4Tm1N35rXleuQSOYw7BRhn6KsfDRFfEwvptnf24R158YSW14oVn7Pfl9M01ot
      aZBSCLEZGwYgPXOdjFFDW8i/5nXT8tF3/OS3hm9s2f7GCbHTNu4IGxrHrCiSqUy12yRE1ax7
      Fsi0Ajz1+DGKttw6QDzaNqwF8geDKCmCE4+4DTrCFAPDo7Q01mLbEgLx6NrgINhg/4E+SrbL
      Fxe+qm6LhKiiDc8ClcslShWXF1986YEnXqrY930q0++3sHbpgrrCu9YPgGFw4NCR+56I61RI
      ZvI0Nay9u+Lt2WUc9/46prpbG6iJhu57nkJsh21Z5U7cmqCcTbKcK//5gYV4iGxP4Y5pUVdb
      Q65cwQ37sG2bcrlMV3MNWq+UV5umec9zC61XyiVM00JphYFLqVRCKQXA/rZ6XFcBGsvy4bru
      Pc8dwMCyzJXXlUOppFBK4bdMelpqwTAwDROlXAzDxDCM1ecYoJXCME2KxeKddpi88txRMrmh
      +3rLulXR1dWF4zhrepPF3rItN8hIJuZJpHLsP9CL3zKkPkbsGTtyhxgJgNgr5LSL8DQJgPA0
      CYDwNAmA8DQJgPA0CYDwtB3pwbnbmfUgtNZVvy/ZVuaptZaOsD1sR745y7Ie+E7xu3GX+a3M
      cythF7tvR5a0uwtTPpukcqcWzi4VSCfTFCo2yimTzaRIrlM7dHfcdDqJutNFV8plSS0lKWuN
      WymQzSRJFTcuskulkqvPM5kMqWRq9XkyldpwnlsdV+w9O9ITDDA/M8nc/BzdvUdJzM5Q31CP
      Xarg+g1iAT92pcLNuTTtLY30dK69ucD05C1mFpY51tfL5NQcTfV1VMpljNowEeVSsW1uLBTp
      aW2ks+3rK1cr1+bG2DhlBa31MTIlRTTop1wuEwwGUEAhl8Z1NV37+4iGvt4AOpUi47emcDGo
      jwYoKR8hn0m5XCIYDKINyKaWcZTFoSOHCViy4D8KduxbzBUrtLc0sbS0jKqUSKZSlG2biYlp
      fIZLrlShtbMbu5jHcZw11+cpVlxam+pZWk7iZLMkMxkc7XJrYgafLpOvaDq791HKZ9eM65Qz
      BGtaiIYskuks6VSKbCZLKZdkOVskl8viC4Rpb64jly/guO6dgjvIZ1LUt3QQ8rmkMiXSySTZ
      TJZccoFMSZHNZgmEYzTVhMmXK7iug6vkN9N73Y5tAXKZJMlskYbaGMvpHE0NdWCY+PwW5WIR
      yx9gYX6OptZOcCsARKNRANLJBNmiQ10sRDpToL6hDtM08QUsirkC/kCQ2dk52ru6cSul1XG1
      1szNTBGIxlGlHPgjRMOBlUpU5eJioO0S6XyF1sY4jgbwEQ750VoxMzVFtK6BUiaJPxonHPBh
      mibKddGGgV0qULA1DTVRMDWGFSboly3BXrZjARBiL5DVl/A0CYDwNAmA8DQJgPA0CYDwNAmA
      8DQJgPA0CYDwNAmA8DQJgPA0CYDwNAmA8DQJgPA0CYDwNAmA8DQJgPA0CYDwNAmA8DQJgPA0
      CYDwNAmA8DQJgPA0CYDwNAmA8DQJgPA0CYDwNAmA8DQJgPA0CYDwNAmA8DQJgPA0CYDwNAmA
      8DQJgPA0CYDwtDU3yh4fPs8nA2M0NDTy3RdeIB4JPtBEP33vDa6NT2EFo5x44ml8ToH+Uyd3
      JG1D5z7i0o0ZGppaeOGF7xEJbHzv78XJG9iRVjoaYxsOk0lM8fo7H5NOp4k3tfOzv/kpIb+1
      Ay0XDwPr1VdfffXuH6OXP6f/h7/gxIEGXn/zPR471sfgV+cYvTlNa3s7s9MzxGtjDA4O09La
      wtTkJG4py9XrY4yO3aKtsxOfadBzoA+VTXDsuRc5tr8N27WJx0Jc+mqA69eukysUuDo8TKS+
      BcvJce78RfI2NDXEARgfHeHqtWtkiormxjpGhy9xZewWzW3tLMzOkF2eZTGnaKiNcunzC/zw
      F79gf32IN9//gmN9+7j05Xluzy7R3FTL3EKK2pook5OTxGtiEAhBJcu5cxcoaz9+VeDCxQEc
      I0h9PEYwUsuJEye4PTHBL/7jz5ibvk04FodKjtnlAlNjw1wbHUUHaqiLhbj81QVuTs7T1t6G
      aRi79T2KB7TuSjkUrSfih+kr58kH2jh5uIMPPjnP5a8uUswv8emHH7KQKTA4dIVbVy9jxtvZ
      VwfDtxPrzuTSpcvgFhkZm+HME0f5amicM08c4fyFy3z40SecOn2GiSsDFOyVu78PXBri8SfP
      cGvoIkvzNxhfhqdOHOT9D85y7uM/MjabpaulYc08Yg3t+HWZsYGzWE29dMZsBq7N8eWX51F2
      gcGRUZanxplM5Hjv3ffpf/xJ2pvq+PjTzzl95mmufPU5FfXtttupWQZGpxn+6gK24WPo6ihn
      nn6GL89+xM2h89g1nfS1+Phs4MYWvwqxG9bdX9DaxXZclpeTdPU/SU2Ni1u8ysH2Wt7/ZIC/
      /OnLDHz2IfG2gxj5W7Q0NWHOz6zedHoj8bp6QqEQDfUrjyjF0sIcX35xFisQ4+79WoORGOFg
      gPpYhMTiAlNTCb7QaTo62pippPjes6f55rpWuRUcBYuLCZaWR1j2K7p6u3ETFpcvXeLAsVOQ
      uQFolBUgHosAioXZKb44e5ZQTR3r3TB2f/9pBn73JuGgj/6mGCM1tQQCQaKhAIsLCaadPPmw
      SWtX46Y/fLH71mwBQpEo5z96h9d+81tOPvU8R06d5tx7v+etN9/i4PGT9B7v5+btWQ7t38/C
      7ZscPdJLKBzFZxr4AiHC9+x/hyJR/NbK5GOxGGASi4XBMIlFv358/FQ/pYqLNk18d3Yh0ovT
      fPLxhyypIIePPk69r4xpaHy+ILGamjULfyTq5+N33ua3r/2eM89/j5Onn6KSzaCVxh8IcOpU
      P2cHxjnc3Yg/GCbo93GgrYF33n2fS1fGOfnYcWwFpmFh3jPhmpoaAAzTT1dcYcS7MQ2D6Vuj
      fPj+uwTr2zl5+jRuPodWikAwsDPfkNhRf/ZG2Uq5KA0+a+cOBJVSGIaBcScAr7/xBq+8/PLq
      a1prtNYYpvmtNf96tNZoWNknv/Pc+Mb++b3z/Ob871XKp3n7nff5/ss/pTbk4403Xufll1/B
      NM2v56XBNGX/fy96KO8UXy6XCQYf7AzUdnPtCiVHEQ2HgIerbWLrHsoACFEt0hEmPE0CIDxN
      ArBpJX77/37NR2e/XD04v2tp5hbp0p1TwVqvHIA7Bf7tn/+Bf3/3s3WmtXZ8UX0b1w2IDTgE
      Ym1YmXne+uNbLM0niDe2sa8lwmIyhS+SIJfPETTKLGRc/v7v/orDXfXUnniGt956m1AwQD67
      TCZbpq29idnZRX70H/4TzTH/br8xT5ItwAOYvnWdyVQRJ5ukXClzpLeNP3x+g/aYSS5fIFpT
      Q2ppEUfd2zFo0hhS5IwIjqvwmwZLiQRF20G57q69F6+Ts0Cbpsnn8viDIXwmZPMFampilIpl
      ggEfmBaFXI5wJEK5YhONhHEdG8PyMfj5B7Qef5abIxc5eeoJwkEfuXyRWE1M6oh2ybYFQGuN
      67orHVbyZYpvsCzroVwuNnUM4DolpqcXaGhuIbk4QyTejC5nKSkfXe0tq72jdx+FeNhtakkt
      phbJlFfObOCvJbU0RzpXQRWy2DvVQiF20Ka2AMHaFvpiNtev36C2oR2tNKBQ6Puq0RHb6w9f
      jFEs39+q57nHumn7Ez8E8qrNnQbVLjMzCxw8cpzs8jx17V3oSp6K8uED/nQxtNhu//L+MEuZ
      4n0N290SlwCsY1MB8AcjHOjtBSDS3nXn1ch2t0mIqpGjVeFpEgDhaRIA4WkSAOFpEgDhaRIA
      4WkSAOFpm/49wNL8NL5YI6n5KSJ1X9cC9XS27UT7hNhRmyuGs4vMzc8RKiqC4QayqQUggJ8K
      Fa0xlUJrjVLSJ1wNmynjVcrFcZwda8uf80hUg6aWlvH5LPKFIpYVwHU14GCgMA1DqkGrbDOL
      k2la+HzyA8Bv2tQn0tjWSV1TM44yySQXCDX2SC2Q2NM2vUqwfAEsoLm1Y+WFSGibmyRE9ci+
      ivA0CYDwNAmA8DQJgPA0CYDwNAmA8DQJgPA0CYDwtA0DUMku8dYf3+XW1BxKrp4oHlEb9gQb
      lg+nlOPi+S+Ymz/AM0+epFzIMjU7T31TK5nEHOF402o16P7ujmq2W4htsWEAXLuE45rUt7Tx
      zJMnAQiEoli4JBPzhKJNFDIJNEH8lKQadBdINejWrX+fYOVyZfAiRqSR7o6v6/xtu0JTczO3
      bk+DmV+pBlVlFFqqQXeBVINu3fqfiAG1jR3s12Hy+ew9LysyuRKHDh+jmE0SjLag7SK2tqQa
      VOxJ6wbAMExScze5lolQG7Q41X8cWLkyXEfHypXgQo3NKwOH5AbRYu9ad19FuTbzyTJWJUsg
      FK52m4SomnUDYFoBfviX36dSqWDblWq3SYiq2bgfoJCmvrmdTDa70SBC7HkbnhYI1jRzoF0T
      aeirZnuEqKoNtwDl3DJnP/6Uzy8OVrM9QlTVhluAQLSWpo4Gahsaq9keIapq3S2AVg6DFz5H
      Bepob5EAiEfX+rtAhknHgWOEVJa5haUqN0mI6lk3AIZhEjGLuOEW9nW1V7tNQlTN+scAWlN0
      faRnx7gVsujdt3I/sEoxx+3pOeINTWSX5tdUg94dRoi9ZIODYE2+rDhxop+R6+PAaQD8oQgN
      8QjLy4tEaloo5ZaAAAFsylpjSTVoVUk16NZteBZoYW6aZK5CtCa++lp2aZappRK9HY3MLKRX
      7hOsilQ0tBsGhlSDVpVUg27dBtWgJs9//6VvvRyuaaTTyGMGorS3mPhDUXAqONrEQqpBxd6z
      yfsEh2gM3rkWaCi48hjwb3ebhKga2VcRniYBEJ4mARCeJgEQniYBEJ4mARCeJgEQniYBEJ4m
      ARCetqkAuJUSgyNX0cph7PpVpucWmZoYZ+zm7Z1qnxA7alOlEIbPj99nUi5micTbKOcTQJAw
      jlSD7gKpBt26TQXAtW3SqSTFpnoyqdRKOaKTo6ShTapBq06qQbduU5+IaVk8dvwx/IEg+8NR
      LH8QlIOrDakGFXvSpgJg+fzEYnerP+8+Wkg9qNirZF9FeJoEQHiaBEB4mgRAeJoEQHiaBEB4
      2pYDUMxnSWcL29EWIapuiwFQTE7NsjAzhbs97RGiqrbYN67w+UMEcHC3PjEhqm6LWwCLUEDj
      +ILSGyz2pC2utA06uvYBrKkC1XozdYriQe1vi1MXC97XsOGAhevu3o6qaZoPZTWoobdpadVa
      ry74D/JGlVIPXEUq4z7c495dLh7GKuFtCwCwpQBsddwHXbvIuBsPBwZ3B92t73anWa+++uqr
      2zUxwzAwDINCepGLIzdpjocplBV2ucTE1DRuPsF8DtLJRcIhP2VbE/D71oy7SjsMDw3jGj6u
      XBqguTnG7dkc0xPjKNNPLBpeM1+tXK6NjFBWBqZboVBRmNplPrFMMBDAQFOpVEgsJYnGoqu1
      9IZhMD56lWLFJRgKopXCcRX5QgHXLpPM5DG1TTJbIBywWEgkMbVNtmgTCQXJzM1SCUWYnpgg
      HPCRzpcxVYXlTIFAIIjr2Liui3JdTMtana92bWYXEsQiYWZnZglHYyzOzxIIR0gszBMMRSjm
      cyQW55mdTxCJ1eL3mattxi0ytZClJhJgdmaOcDTCwvwcgXCExfl5QpEwhXwefH4s01jzWU3e
      GCZjB8jMXSdtRyllE/j8PsZu3CAajbC4lEJnp8lYjUQDX483Nz3B/OIS/lCY9FICKxAmm0rg
      YjExfgOnUqBow9DQCEFsCNcQsIxvf7cPkR05cTN5e4pyoUAqlaFsu6SKFeqDBsmKn4CeQwea
      GB4eof/UExtPpJgk2LiP9pZayrlmJm7dQrtBQi0HaGuOfWtw5ZQJ1TTQ2VLP9RsTaK2wtCIW
      9HFzMk/QMkim0gQssEIxmuNfB8hxXTAMZmemCZgumVyZaGMHueQ8QV8AQ4WZvD3Fcm2cfT09
      XBm6BJaf+ON/gXJsJm+Ok0/nyCaXKGuL3u52btycoqWpGcNwcR0H07LoPXhwTZsd18W1SxQL
      Oa6PXscuO9ilLIm8YmEhgbKCRIMmh/sOffvz0QrHUTiVEqVimutXMtjapVzMkyk5ZJYXSKko
      p/sPfntcX5RKIYlPu+TmbpHwBVhK5wn4fZSLBVIzYxTjDdxzZXwA4vE6UlOzFHJLlMoBEteH
      CMaacJduY1k+GhobuXp1lJpIhIW8zXH/w7fL803/H567artw3aUMAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Down Time per Device Type' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAABJ0AAASdAHeZh94
      AAATL0lEQVR4nO3daXAUZ37H8W+fc+qWECCEBAiQwBaSEDeGhbW93mVTezlZx97KVvaFk1Q2
      lUqq8i7Hq7zIm7xL3uxm42STKpeT2sPZ214vNmBxilsgiUNGEjrRMaMZzUx3T+eFMCAbGzFu
      aYT6/6lSuR6Z6W5Nz6+fPp7nP4rrui5C+JCiKIqa740QIp8kAMLXJADC1yQAwtf0fG+AnyUn
      73AnliQYKaKspABVUT75H7suA703KFqxjrDxyf8snZxk5E4MF1A0nYpllQR0Oc59EglAHp36
      2Wu83WtQpiUpe+oAr7ywHRVwsi6a9vEP7e0PrqGXfzwATtZFU2fCM97fzS9++RbHLw+xc/cO
      vvL1F6ks+PQAOI6Dqml8SvyWLAlAHtmWxee/8Sc8U5vln/7hnxneu46ff//fmVY1arcfQrv2
      Fmu++CrBnrc5n65Du3GFos0HOffTH3Bx1KK+eT+l8UscO3uDxi99i+eaali+vpVXlxfS9y9t
      vPrtP+TML37IhaoD7KlO8fqvulmt3+LyHZc7ff38wZ//Ddkrv+adzjFcR+c7f/odigx/xUD6
      xkVAMwqoCCr0Xm2jx61kR2sDxw8fYeP6Kk6c6eDUmS7W160kPj5KbOA65ycL+YvvfpcXWlby
      7okuWvY08t5b7z102Q3NTRw/fJiuk+9TsbGRxLTLCy9+i+++tJd3fvcebx29zJbGJgrsfi72
      TCzwX55/EoB8cl0SsXFuXnqfXmMZVZEw8TsjpCjg4P6trGzYxviFX9Nnl1BbFgZAM4PYiRiJ
      6TTJdAbsJEkryrP7mx66ivCKBlbbt/hx+wh7GqvAzZKxLAYGhogWFaPY04xPJVnXtJeaksBC
      /vWLgpwC5dGymg28fexN+guK+fYfv0xlmc4XGvvo7OyiYs0WAgXLqF9ZRLp2GyFNoaa+kfLK
      ag7tqOGN//pPNrR+jq9/7YscOXsNpb7s/oKNAho3r7nb0Dm4ex09HSWUGoAV51c/ep3CSAnf
      +OYOkjXw6+NXiIWKWN/kv+OhIkMhFhfXdXFdF0VRURQXN+uCoqB85A5RNptFUVUUIOu6KCg8
      7CZSbKCbH7z2Bl/4zl/TUBnizR9+j40vvMSG8ui9ZbrZ7EPXsdQpiqIsigA4joOqqr7bASK/
      Fs1YoEWQQeFTeb0GcByHbDZ770eIhebpKVDHqWMktBCaGeWp+jpuXT7BzZEEoeIqdrVs5Mb5
      4/TcSRIuWcXOlo1od095bNtG0zQ5BRILyvNToLG0S0tTE82bN2CoKQYmdZ579lmK3UnGpiYY
      SgZ47tlnidpjxNO2l6sWIieengIVBlzOnT5Bwg2xvWU5pjlza67YDJJ0JwkYM+1SM0jCzVLs
      5cqFyIGnPUDjtmfYun0ny0gwPAXp9CQA8UwKgxDpzEw7lk5j+nLkiVhsPOwBkpx89zSEAtyJ
      OeyLlDNuXKbt5AmSaY26aAVDymXaTh4naZtsDHzKkEYhFoinF8Gu62JbFpphoCrKTNu20XR9
      VlvX9VkXvHIRLPJh0TwIkwCIfFg0D8KEyBcZDCce2xu/u8xPjlx9rNdsqq3gb/9o3zxtUe4k
      AOKxZSyHRMp6rNekMovzuY+cAglfkwAIX5MACF+TAAhfkwAIX5MACF+TAAhfkwAIX5MACF/z
      +Emwy9D1dtp7dZ7f38i1cyeJY96dIrmWvqvtXB+MUbisltan1qHK2DeRZ572AJnEOD1DSUx1
      ZoL7SNKmecsWmjbVobkp+sZdPn/wIHpikPgifTQu/MXDHiBL56Ur1G1u4OL5XgCCSpr2U8ex
      zRKaNxcTMJehKArlgRBTWYeoo0hViCeQ4ziP/ZpsNksmk5mHrflsPAuAHR/k1nia7LVO+vuG
      GZmsp3X3QcDl0tEjjCSLsKw4AIlMhjIUNE1D0zSZD/CE0TTtsV+jqiqmac7D1nw2ngVAi67g
      hecqwZrgzlSQssIsp4++jxYJMpR0qQ2VM+Rc5nR7homUSp0pUyJF/nkWAEWZOaKjlrJ/bwmq
      otC0YxsZK8NTTwfRNZWWPQdIpTOYgSCaJkd7kX/ezwdQlHsfbt0w0I37R3pF0wmHZQqCWDzk
      OYDwNQmA8DUJgPA1CYDwNbki9ZG+kRj/+uNTj/26v/v2fkKBpflRWZp/lXio6bTN5Z6Rx37d
      Un5KL6dAwtckAMLXJADC1yQAwtckAMLXJADC1yQAwtckAMLXJADC1zwOgMvEQDdtZ7rIui6j
      vV0cPnyYKzcHyLouw7c6OXz4MFd7Bsn/FzMJ4XEAnEyC7uu3mIxN4WLTcW2A3Xv3EL99nXgy
      ydWbw+zZu4fx3m4S1uNPrBbCax6OBXK50XGJFRs2k7g6gOtOYAZXYeoGK6IRJq1RgsEqDN1g
      ZSRMzLEJOUhViAVk24/3rS4fylgWxgPz4KUqxEPY8dtcuDnORuD27SFGY8twnDQAGcfBRMVx
      pgGwHIeAVIVYcLqeWyEC0zBmVXSQqhAPoUVW8HuHKsCaZGhco7RgOTftK3zQF6U3nmZ7qJLe
      zBE+6AvTm7TYbchAVJF/nl0DKHcTboZK2LZ1E4am0rKtFRyXxuYWQgGDltYWcFy2tLRg6nID
      SuSf94dhVaewcGaxgUgxNZHie/8rGC2hJlri+SqFyJUchoWvSQCEr0kAhK9JAISvSQCEr0kA
      hK9JAISvSQCEr0kAhK9JAISvSQCEr0kAhK9JAISvSQCEr0kAhK95Oid4uPca3R8Ms7x2A2uq
      yhm73cPgRBLFCLNxXQ3p2BBnL11nzaYmVpZGkRmQIt887AFsLCXKzl07GevpYCyRoftmP2vr
      6qirXYWKzZmzHWzd3sq1i+2kbJkEL/LPwx7AoLw4QHfXFSw9StjUsDIJBnpvESgsZ3mJRSBS
      QygQZHVBmAnbJqDpuK4rFSEWSDaHag4wUwXCtu37y8lhf7muO2sZi4WnUyJV3SQcDDI6PEna
      cWlp3U46Y3Hl/FnMbRvggWJY7t3Gh5UgpCLE/Mv1PVYUZdZrP8tyFhvvAmAliaUUlletZnp0
      iInkJKGMRmlZESFTA6WYVPI0yXQV/fEELbqOqs6cgamqiqqqi/INWkoUNbczXlVVZ5VCyWU/
      KYqSUzmV+eZdADSdwZvn6cmqBApXUVdSSl/XJc73pSisrqciGiH49Do6Ll6mumELIWPxvRnC
      f7wLgGqyuXnbrF/V1DdS80C7sKKa1opqz1YpxGclzwGEr0kAhK9JAISvSQCEr0kAhK9JAISv
      SQCEr0kAhK9JAISvSQCEr0kAhK9JAISvSQCEr0kAhK9JAISveRqA+NggV69cZWh8ChewpmNc
      7bjC+NTdL8xOTnKl4woTibSXqxUiZx4GwGJoJEZZeSnXL7Uzkcxw5sQJIsWFnD9zmlTG4syp
      UxQUF9B++gwZRybCi/zztCrEmnW1TMVjuOhoyiRZYxXVK6uwhgYZTQ6jBKpZtXIVqdsDjGds
      lgUNYKZiwIc/Yh7l+P5+tHJHLvvJdXOrJjHfPK0KkZka5+rVbhw1hKo6qKoJgKGqOFioqvFA
      e+ZNlbIoC8fJ5l4WxXHunyxkcwqAi5NjWZb55F0AnDRuqIwduyq50d7GUNwglbyN465hKD7F
      WmMdNxMXcdwaBqcSNKjarCoBmqZJVYh5pmm57W5d1zEM4/5ycqguoarKrGUsFh72AFk62k9h
      KTqqUUhTSQkF68o53nacouVrKQ4XUF9bwvG2ExRX1VFgSlUIkX8elkUJsXXnnntNRVGoqKmn
      ouZ+u7K2gcra+20h8m3OfdnlU+9x7uoNpjOffB73YQWxB6u9fVpbiHybcw9QubKK421tHHvn
      l5RU1LJn/15WVxRJhWfxRJtzD1BYVIKuZRm41Uc8GednP/we1yes+dw2IebdnHuA9vd/i1rZ
      xN//4ysYqsJkfxcpTUZSiCfbnAOwYkUVXefO8vq1s4TLVnHo+YMUL767WkI8ljkH4Fdvv0Pz
      wa9SYGrowShS21YsBY8MgJWK03GpAy2r0T86wcqogemoZGXUglgCHhkA17EYGRygfF0DxEcZ
      iEOo2KVBAiCWgEcGwIyU8uyXv0pb21FaWncRMLKceO8oGTtLUJeLYPFkm8M1QJau9jZ++uab
      9A2MYioZ2i/eoq513/xvnRDzbA4BUKhcvY7NmxrY0riFgKGy+3MvUBqSq2Dx5HtkAFKxIX7+
      kx8Rz8Dbv/klANFlNbz4lUOE5TaoeMI9MgB6sJAd+w5iOVmm4jHsLJiRYuT0XywFjw6AGWbd
      hnref/M/+N25Tiy9BCNawcb6emREs3jSzflBWOdQjJcPPUOn0USq4zdMWw4ReRomnnBzDkBD
      zRrUqk10vfZvTJmVHNA+Pgx0bLCHzuv9FFSupmHtKoZvdTMST6OYERrqapka7eVC5wdUr3+K
      2uWlMpJU5N2cA7Dz+UPEx+/wrT/7SwKGQTjw8YuAeNJm646ddJ5qY6iinJ6+YVq2b0dVVFQs
      LnTcZMeeXZxqO0Fl+R7C0oOIPJtjABz+743Xqd/aQFcXqOlutj/3ImWR2R/g6ppqOs6eQCmv
      oTxiMlkQoPPSeUYTLru2rSYUWU3ADFBdGGXStgmoM5UCPvwR88u2cxu+nrGsWWO/cpncns1m
      yWQyOa1/Ps25B5iaGGI0VsPEwBCDo4Ps+MJHz19cLpw4RtHaFmoqi1CA+sZWFAWutr3P6LRC
      Kj2B67pMpqapUlQ0bWZivG3bMil+Aeh6bvetTcPANM177QeLGcyVqqqzlrFYzDEAGt946WV+
      /ou3cQyNF156hdLQR0+BEvT0DFOevUT/tQBPbdtA1/HzuEGDWEZnX0E58WAnbSePY6uFbDY9
      rcgiRE7m/Cnsu97J2N2ShhfOtrNmxfMfeRAW5asvvzTrNdv2PYPjOPeO7ptaZ7eFyLc5B+Ct
      d4+y4/kXiZoaejAyp2cAiqKg6/ontoXItznMB4hx4ewFFAu6bt2emQ8QLWHlihULsX1CzKtH
      zwfIOkzFY6za3AzZaWKxaYJKINcyk0IsKo8c0WOGS9j//JfYUBmkv7+f27dvMzgyhiMBEEvA
      nE/If3vsBLvuXgNogbCMAxJLwpwDsKa4gCs3e1kR0QkUlLJi+fL53C4hFsSjBzXfLWu9ZksL
      ESdJfGqK5HRKrgHEkvDoHsBK8NM3/pubQ1PAzBcdNOysRpdTILEEPDoARpgvfv0V7LtXvU5m
      gtd+8D+0bqmnskCmhIkn25zmBGuajvLhyZIFlmPLk1yxJDw6AJkp/vc/vs+1wTgArmqy79Dv
      UxGVJ7riyffoT3GggJdf/asF2BQhFp5MbRe+JgEQviYBEL4mARC+5umtnM5zbQzFbJRAlG0t
      jQx3n6N7YIKCihq2Pr2O3o4zXB+cpHDZGrY+tRZV7qSKPPO0B6je0Mgzz+xlmZpiNBGjZzTD
      gYMHMaeHmZiK0Tue5cDBA2hTA8QztperFiInnvYAoWCQvmuXGHbD7Ihm6DMqURWF8mCYKWeM
      gLkMVVEpD4aYyjpEHUWqQiwgqQrxcZ4G4NrFkySCK9nVuhqNSSxrEICElSaqBLGsOzPtTIYy
      FKkKscCkKsTHeXgKlKC9vZv05BDtp88TtyKEGebMuXZ6Ey7lkQpMZ4Az59rpTymUmDKOSOSf
      hz1AmK+9/E1mhswpGKZO854DTKfSmIEguq6ydc/nmE5lMAMh9IeUVhRioXkYAAUzEJj9K00n
      EnmgKoRmEInIkV8sHvIcQPiaBED4mgRA+JoEQPiaBED4mgRA+JoEQPiaBED4mgRA+JoEQPia
      BED4mgRA+JoEQPiaBED4mgRA+JqnUyLTiQmudl5jdX0TJSGN3u4OxlIOihlh0/o1jPdfo+PG
      bSrXNLBxdSUyA1Lkm6c9QH9vL7GJEabSWVzg1vAEDZs2samuFpUMV24OsWvvHsZvdZG0Hn9i
      tRBe87QHWFv/NNb0xL22PT3G+TMnCZbVUF+jEwxWYeoGKyNhJh2boINUhVhAuVaFsCyLjFSF
      eHz7nv0y4HL2vXcZLl+P48y8AZbjEEBBVVVUVcW2bfkC7QWQa1UIwzAwjPuvzbUqxIPLWCw8
      /NRlGervY3h0jKDZR0mogoEbQ4SLgiSyKmGzDDfTya3+CL1Ji92Gfq8Mykf/KxYfL/bNYty/
      Hl4DuLiuS/X6LVRENSBEWVmITMZiQ2MzxaEgLa0tZC2HLc0tmLrcgBL552EPoLF8Vc3sXwWr
      KH2wGS2hNlri3SqF+IzkMCx8TQIgfE0CIHxNAiB8TQIgfE0CIHxNAiB8TQIgfE0CIHxNAiB8
      TQIgfE0CIHxNAiB8TQIgfE0CIHzN0wBkszYDfT1MpR1wXaYnhzh25Cj9d+K4rktyYpBjR45y
      e2wK1/VyzULkxtMAdJ0/yen2dsaTDi5ZTp26QPP2Vm5cPEsineb0mcs0b99K9/l2UrZMghf5
      5+lM9Prm3SgcmWm44xjhGsKBINXFUcZTIwSiqwkHQqwuDDNp2wQ0Hdd1pSLEAslmcytF4zgO
      tm0/sJzH31+u685axmIxj6UYXHDvTnYHsmTvtQGyH36nvEyIXzAKub3HiqLM2j+57qvFuI//
      H+Sv3r5GmEbGAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Down Time per Factory' width='192'>
      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
    </thumbnail>
  </thumbnails>
</workbook>
